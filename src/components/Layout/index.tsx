import { setLogout } from "@/api";
import { USER_ROLE } from "@/constants";
import { useCurrentUser } from "@/utils/hoos";
import { DownOutlined, MenuOutlined } from "@ant-design/icons";
import {
  ProfileOutlined,
  SnippetsOutlined,
  SolutionOutlined,
  UserOutlined,
} from "@ant-design/icons";
import {
  Layout as AntdLayout,
  Button,
  Drawer,
  Dropdown,
  Menu,
  MenuProps,
  Space,
  message,
} from "antd";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";
import React, { PropsWithChildren, ReactElement, useMemo, useState } from "react";

import styles from "./index.module.css";

const { Header, Sider, Content } = AntdLayout;

const ITEMS = [
  {
    label: "Manage Books",
    key: "book",
    role: USER_ROLE.USER,
    icon: <SnippetsOutlined />,
    children: [
      {
        label: "All Books",
        key: "/book",
        role: USER_ROLE.USER,
      },
      {
        label: "Add a Book",
        key: "/book/add",
        role: USER_ROLE.ADMIN,
      },
    ],
  },
  {
    label: "Checkout",
    key: "borrow",
    role: USER_ROLE.USER,
    icon: <SolutionOutlined />,
    children: [
      {
        label: "All Records",
        key: "/borrow",
        role: USER_ROLE.USER,
      },
      {
        label: "Checkout a Book",
        key: "/borrow/add",
        role: USER_ROLE.ADMIN,
      },
    ],
  },
  {
    label: "Category",
    key: "/category",
    icon: <ProfileOutlined />,
    role: USER_ROLE.ADMIN,
  },
  {
    label: "Manage Users",
    key: "user",
    icon: <UserOutlined />,
    role: USER_ROLE.ADMIN,
    children: [
      {
        label: "All Users",
        key: "/user",
        role: USER_ROLE.ADMIN,
      },
      {
        label: "Add A User",
        key: "/user/add",
        role: USER_ROLE.ADMIN,
      },
    ],
  },
];

const Layout: React.FC<
  PropsWithChildren & { title?: string; operation?: ReactElement }
> = ({ children, title = "All Books", operation }) => {
  const router = useRouter();
  const user = useCurrentUser();

  const activeMenu = router.pathname;
  const defaultOpenKeys = [activeMenu.split("/")[1]];
  const [visible, setVisible] = useState(false);

  const handleChangeMenu: MenuProps["onClick"] = (e) => {
    router.push(e.key);
  };

  const USER_ITEMS: MenuProps["items"] = [
    {
      key: "1",
      label: <Link href={`/user/edit/${user?._id}`}>Profile</Link>,
    },
    {
      key: "2",
      label: (
        <span
          onClick={async () => {
            await setLogout();
            localStorage.removeItem("user");
            message.success("You have successfully logged out!");
            router.push("/login");
          }}
        >
          Log Out
        </span>
      ),
    },
  ];

  const items = useMemo(() => {
    if (user?.role === USER_ROLE.USER) {
      return ITEMS.filter((item) => {
        if (item.children) {
          item.children = item.children.filter(
            (k) => k.role === USER_ROLE.USER
          );
        }
        return item.role === USER_ROLE.USER;
      });
    } else {
      return ITEMS;
    }
  }, [user]);

  const myMenu = (<Menu
    className={styles.menu}
    onClick={handleChangeMenu}
    selectedKeys={[activeMenu]}
    items={items}
    mode="inline"
    theme="light"
    defaultOpenKeys={defaultOpenKeys}
    style={{fontWeight: '600'}}
  />);

  return (
    <>
      <Head>
        <title>Library Management System</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <AntdLayout className={styles.container}>
          <Header className={styles.header}>
            <Button
              className={styles.btnDrawer}
              type="primary"
              icon={<MenuOutlined />}
              onClick={() => setVisible(true)}
              size="small"
            />
            <Drawer
              placement="left"
              onClose={() => setVisible(false)}
              open={visible}
            >
              {myMenu}
            </Drawer>
            <Image
              src="/logo.svg"
              width={30}
              height={30}
              alt="logo"
              className={styles.logo}
            />
            Library Management System
            <span className={styles.user}>
              <Dropdown menu={{ items: USER_ITEMS }} placement="bottom">
                <span onClick={(e) => e.preventDefault()}>
                  <Space>
                    {user?.name}
                    <DownOutlined />
                  </Space>
                </span>
              </Dropdown>
            </span>
          </Header>
          <AntdLayout>
            <Sider className={styles.sider} collapsedWidth={0} breakpoint={"lg"} trigger={null}>
              {myMenu}
            </Sider>
            <Content className={styles.content}>{children}</Content>
          </AntdLayout>
        </AntdLayout>
      </main>
    </>
  );
};

export default Layout;
